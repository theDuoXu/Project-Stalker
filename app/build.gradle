plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group = 'projectstalker'
version = '0.1 - ALPHA'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

javafx {
    version = "25"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.swing' ]
}

configurations {
    nativeLibs
}

application {
    mainClass = 'projectstalker.Main'
}

dependencies {
    // --- Framework de UI ---
    // (Tu configuración del plugin de JavaFX ya gestiona esto)

    // --- Serialización (JSON) ---
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'

    // --- Logging Profesional ---
    implementation 'org.slf4j:slf4j-api:2.0.13'
    runtimeOnly 'ch.qos.logback:logback-classic:1.5.6'

    // =======================================================
    // --- STACK DE BASE DE DATOS (POSTGRESQL) ---
    // =======================================================

    // 1. El controlador JDBC para hablar con PostgreSQL
    implementation 'org.postgresql:postgresql:42.7.3'

    // 2. El pool de conexiones de alto rendimiento
    implementation 'com.zaxxer:HikariCP:5.1.0'

    // 3. La librería para interactuar con la BD de forma sencilla
    implementation 'org.jdbi:jdbi3-core:3.45.2'
    implementation 'org.jdbi:jdbi3-postgres:3.45.2'


    // --- Pruebas Unitarias ---
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.assertj:assertj-core:3.25.3'
}

tasks.named('run', JavaExec) {
    jvmArgs "-Djava.library.path=${configurations.nativeLibs.asPath}"
}

test {
    useJUnitPlatform()
}